name: Vercel Deploy

on:
  push:
    branches: [ main, root-clean ]
  workflow_dispatch:

permissions:
  contents: read
  deployments: write

jobs:
  deploy:
    name: Build and Deploy to Vercel
    runs-on: ubuntu-latest
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      # Recommended: use NAME and TEAM SLUG; fall back to IDs if not provided
      VERCEL_PROJECT_NAME: ${{ secrets.VERCEL_PROJECT_NAME }}
      VERCEL_TEAM_SLUG: ${{ secrets.VERCEL_TEAM_SLUG }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Verify Vercel CLI auth
        run: |
          npx vercel --version
          # List teams and projects (no secrets printed)
          npx vercel teams ls --token=$VERCEL_TOKEN || true
          npx vercel projects ls --token=$VERCEL_TOKEN || true

      - name: Resolve Vercel project/scope variables
        id: resolve
        shell: bash
        run: |
          set -e
          # Prefer NAME/SLUG; fall back to IDs
          PROJECT_REF="${VERCEL_PROJECT_NAME:-$VERCEL_PROJECT_ID}"
          SCOPE_REF="${VERCEL_TEAM_SLUG:-$VERCEL_ORG_ID}"
          echo "project_ref_masked=${#PROJECT_REF}" >> $GITHUB_OUTPUT
          echo "scope_ref_masked=${#SCOPE_REF}" >> $GITHUB_OUTPUT
          echo "PROJECT_REF=$PROJECT_REF" >> $GITHUB_ENV
          echo "SCOPE_REF=$SCOPE_REF" >> $GITHUB_ENV
          # Build optional flags; do not force if empty to allow default scope resolution
          EXTRA_PROJECT=""
          EXTRA_SCOPE=""
          if [ -n "$PROJECT_REF" ]; then EXTRA_PROJECT="--project=\"$PROJECT_REF\""; fi
          if [ -n "$SCOPE_REF" ]; then EXTRA_SCOPE="--scope=\"$SCOPE_REF\""; fi
          echo "EXTRA_PROJECT=$EXTRA_PROJECT" >> $GITHUB_ENV
          echo "EXTRA_SCOPE=$EXTRA_SCOPE" >> $GITHUB_ENV

      - name: Link project (no prompt)
        run: |
          npx vercel link --yes \
            --cwd=. \
            ${EXTRA_PROJECT} \
            ${EXTRA_SCOPE} \
            --token=$VERCEL_TOKEN

      - name: Pull Vercel Environment Information
        run: |
          npx vercel pull --yes \
            --environment=production \
            --cwd=. \
            --token=$VERCEL_TOKEN \
            ${EXTRA_PROJECT} \
            ${EXTRA_SCOPE}

      - name: Install dependencies
        working-directory: .
        run: pnpm install --frozen-lockfile

      - name: Build
        working-directory: .
        run: pnpm build

      - name: Deploy to Vercel (prebuilt)
        run: |
          npx vercel deploy --prebuilt \
            --prod \
            --cwd=. \
            --token=$VERCEL_TOKEN \
            ${EXTRA_PROJECT} \
            ${EXTRA_SCOPE}
