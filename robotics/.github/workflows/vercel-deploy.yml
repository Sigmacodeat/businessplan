name: Vercel Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  deployments: write

jobs:
  deploy:
    name: Build and Deploy to Vercel
    runs-on: ubuntu-latest
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Verify Vercel CLI auth
        run: |
          npx vercel --version
          npx vercel teams ls --token=$VERCEL_TOKEN || true
          npx vercel projects ls --token=$VERCEL_TOKEN || true

      - name: Link project (no prompt)
        run: |
          npx vercel link --yes \
            --cwd=robotics \
            --project=$VERCEL_PROJECT_ID \
            --org=$VERCEL_ORG_ID \
            --token=$VERCEL_TOKEN

      - name: Pull Vercel Environment Information
        run: |
          npx vercel pull --yes \
            --environment=production \
            --cwd=robotics \
            --token=$VERCEL_TOKEN \
            --project=$VERCEL_PROJECT_ID \
            --org=$VERCEL_ORG_ID

      - name: Install dependencies
        working-directory: robotics
        run: pnpm install --frozen-lockfile

      - name: Build
        working-directory: robotics
        run: pnpm build

      - name: Deploy to Vercel (prebuilt)
        run: |
          npx vercel deploy --prebuilt \
            --prod \
            --cwd=robotics \
            --token=$VERCEL_TOKEN \
            --project=$VERCEL_PROJECT_ID \
            --org=$VERCEL_ORG_ID
